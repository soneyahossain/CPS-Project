Run started:2020-04-26 18:41:48.657556

Test results:
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:24
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
23	            for c in range(cols):
24	                row.append(random.random()*2 - 1)
25	            l.append(row)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:278
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
277	                              [.1192 , .26894, .5, .73106, .8808]])
278	    assert(almostEqualMatrixes(nn.sigmoid(a), sigAExpected))
279	    print("Passed!")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:289
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
288	    expectedOutput = nn.sigmoid(np.matrix(np.append([1], inputArr))*weights[0])
289	    assert(np.array_equal(nn.forwardPropagation(inputArr), expectedOutput))
290	
291	    # testing neural netwrok with one hidden layer
292	    nn = NeuralNetwork(4,5,3)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:297
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
296	                                          * weights[1]))
297	    assert(np.array_equal(nn.forwardPropagation(inputArr),expectedOutput))
298	
299	    # testing neural netwrok with multiple hidden layers
300	    nn = NeuralNetwork(4,(3,4),3)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:307
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
306	                                          * weights[2]))
307	    assert(np.array_equal(nn.forwardPropagation(inputArr),expectedOutput))
308	    print("Passed!")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:316
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
315	    weights = nn.initWeights(1, 0, 3)
316	    assert(np.shape(weights[0]) == (2,3))
317	
318	    # tests making weights for a Neural Network with one hidden layer
319	    weights = nn.initWeights(2, 3, 1)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:320
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
319	    weights = nn.initWeights(2, 3, 1)
320	    assert(np.shape(weights[0]) == (3,3))
321	    assert(np.shape(weights[1]) == (4,1))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:321
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
320	    assert(np.shape(weights[0]) == (3,3))
321	    assert(np.shape(weights[1]) == (4,1))
322	
323	    # tests making weights for a Neural Network with multiple hidden layers
324	    weights = nn.initWeights(1,(2,3),4)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:326
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
325	    # nn.printWeights(weights)
326	    assert(np.shape(weights[0]) == (2,2))
327	    assert(np.shape(weights[1]) == (3,3))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:327
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
326	    assert(np.shape(weights[0]) == (2,2))
327	    assert(np.shape(weights[1]) == (3,3))
328	    assert(np.shape(weights[2]) == (4,4))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:328
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
327	    assert(np.shape(weights[1]) == (3,3))
328	    assert(np.shape(weights[2]) == (4,4))
329	    print("Passed!")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:347
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
346	    finalError = difference * difference.transpose()
347	    assert(finalError < initialError/100)
348	    print("Passed!")

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:356
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
355	    for n in range(numExamples):
356	        inputsList += [[random.random(), random.random()]]
357	        outputsList += [[1 if inputsList[n][1] > inputsList[n][0] else 0]]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:356
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
355	    for n in range(numExamples):
356	        inputsList += [[random.random(), random.random()]]
357	        outputsList += [[1 if inputsList[n][1] > inputsList[n][0] else 0]]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:365
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
364	    for n in range(numExamples):
365	        inputsList += [[random.random(), random.random()]]
366	        outputsList += [[1 if inputsList[n][1] > inputsList[n][0]**2 else 0]]

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/NeuralNetwork.py:365
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
364	    for n in range(numExamples):
365	        inputsList += [[random.random(), random.random()]]
366	        outputsList += [[1 if inputsList[n][1] > inputsList[n][0]**2 else 0]]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Path.py:127
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
126	        (point, norm) = path.path[p]
127	        assert(path.onPath(point))
128	        (p1, p2) = path.getBoundaryPoints(path.path[p])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Path.py:129
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
128	        (p1, p2) = path.getBoundaryPoints(path.path[p])
129	        assert(path.onPath(p1))
130	        assert(path.onPath(p2))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Path.py:130
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
129	        assert(path.onPath(p1))
130	        assert(path.onPath(p2))
131	        (p3, p4) = path.getOutOfBoundaryPoints(path.path[p])

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Path.py:132
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
131	        (p3, p4) = path.getOutOfBoundaryPoints(path.path[p])
132	        assert(not path.onPath(p3))
133	        assert(not path.onPath(p4))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Path.py:133
   More Info: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html
132	        assert(not path.onPath(p3))
133	        assert(not path.onPath(p4))
134	    print("Passed!")

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Population.py:32
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
31	                    numWeights += 1
32	                    randomNumber = random.random()
33	                    if randomNumber < fullMutationRate:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Population.py:34
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
33	                    if randomNumber < fullMutationRate:
34	                        weightsList[row][col] = random.random() * 2 - 1
35	                    randomNumber = random.random()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Population.py:35
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
34	                        weightsList[row][col] = random.random() * 2 - 1
35	                    randomNumber = random.random()
36	                    if randomNumber < partialMutationRate:

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Population.py:70
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
69	        fitnessPercentages = self.findRegularizedFitnesses()
70	        randPercent1 = random.random()
71	        randPercent2 = random.random()

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   Location: /Users/soneyabintahossain/cps_project_test/Self-Driving-Car-Simulation/Population.py:71
   More Info: https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b311-random
70	        randPercent1 = random.random()
71	        randPercent2 = random.random()
72	        parent1 = None

--------------------------------------------------

Code scanned:
	Total lines of code: 1056
	Total lines skipped (#nosec): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0.0
		Low: 26.0
		Medium: 0.0
		High: 0.0
	Total issues (by confidence):
		Undefined: 0.0
		Low: 0.0
		Medium: 0.0
		High: 26.0
Files skipped (0):
